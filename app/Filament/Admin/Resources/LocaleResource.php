<?php

namespace App\Filament\Admin\Resources;

use App\Filament\Admin\Resources\LocaleResource\Pages;
use App\Models\Locale;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Form;
use Filament\Notifications\Notification;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Support\Str;


class LocaleResource extends Resource
{
    protected static ?string $model = Locale::class;

    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                TextInput::make('name')
                    ->required()
                    ->label('Name')
                    ->minLength(3)
                    ->maxLength(255)
                    ->live(onBlur: true)
                    ->afterStateUpdated(function ($state, $set) {
                        $set('slug', Str::slug($state));
                    }),
            
                TextInput::make('slug')
                    ->required()
                    ->minLength(3)
                    ->maxLength(255)
                    ->label('Slug')
                    ->helperText('Slug will be autogenerated from name')
                    ->unique(ignoreRecord: true),
            
                TextInput::make('key')
                    ->required()
                    ->minLength(3)
                    ->maxLength(255)
                    ->label('Key'),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('name')->alignment('center')->searchable(),
                Tables\Columns\TextColumn::make('slug')->alignment('center'),
                Tables\Columns\TextColumn::make('key')->alignment('center')->searchable(),
                Tables\Columns\TextColumn::make('software_translations_count')
                                ->counts('softwareTranslations')
                                ->label('Softwares Translations')
                                ->badge()
                                ->alignment('center')
                                ->color('primary'),
            ])
            ->filters([

            ])
            ->actions([
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make()
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    // Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListLocales::route('/'),
            'create' => Pages\CreateLocale::route('/create'),
            'edit' => Pages\EditLocale::route('/{record}/edit'),
        ];
    }
}
